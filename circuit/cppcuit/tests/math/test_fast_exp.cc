
// WTF why do I have to prefix this with include while other tests don't?
// Cmake is set up the same for both handwritten and autogenerated ones
#include <include/gtest/gtest.h>

#define _USE_MATH_DEFINES
#include <cmath>

#include "math/fast_exp_64.hh"

class FastExpComputeTest
    : public testing::TestWithParam<std::tuple<double, double>> {};

class FastExpOneAtZero : public testing::TestWithParam<double> {};

void compare(double base, double exponent, double tolerance) {
  FastExpCache cache = FastExpCache::from_base(1.0 / base);

  double computed = cache.compute(exponent);

  double expected = std::pow(1.0 / base, exponent);

  double rel_diff = std::abs((computed - expected) / expected);

  EXPECT_LE(rel_diff, tolerance)
      << "fast exp of " << base << " to negative " << exponent << " is "
      << computed << ", expected " << expected << ", relative difference "
      << rel_diff << " less than tolerance " << tolerance;
}

TEST_P(FastExpComputeTest, TestComputeExp) {
  auto [base, exponent] = GetParam();
  compare(base, exponent, 1e-4);
}

TEST_P(FastExpOneAtZero, TestComputeZero) {
  double base = GetParam();
  compare(base, 0.0, 0);
}

INSTANTIATE_TEST_SUITE_P(
    FastExpTests, FastExpComputeTest,
    ::testing::Combine(::testing::Values(1.1, 2.0, M_E, 5.0, 10.0), // base
                       ::testing::Values(0.5, 1.0, 2.0, 5.0, -0.5, -2.0,
                                         -5.0) // exponent
                       ));

INSTANTIATE_TEST_SUITE_P(FastExpTests, FastExpOneAtZero,
                         ::testing::Values(1.1, 2.0, M_E, 5.0, 10.0) // base
);