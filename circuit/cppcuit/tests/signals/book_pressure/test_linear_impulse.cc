#include "signals/book_pressure/linear_impulse.hh"

// WTF why do I have to prefix this with include while other tests don't?
// Cmake is set up the same for both handwritten and autogenerated ones
#include <include/gtest/gtest.h>

#include <cmath>

// Test that if there's no impulse, we get NaN

TEST(LinearImpulse, TestEmptyImpulse) {
  LinearBookImpulse impulse(1.0);
  EXPECT_EQ(impulse.compute_fair(), std::nullopt)
      << "Empty impulse gives non-none result " << *impulse.compute_fair();
}

TEST(LinearImpulse, TestJusBidImpulse) {
  LinearBookImpulse impulse(1.0);
  impulse.add_impulse(Side::Buy, 1.0, 1.0);
  EXPECT_EQ(impulse.compute_fair(), std::nullopt)
      << "Empty impulse gives non-none result " << *impulse.compute_fair();
}

TEST(LinearImpulse, TestJusAskImpulse) {
  LinearBookImpulse impulse(1.0);
  impulse.add_impulse(Side::Sell, 1.0, 1.0);
  EXPECT_EQ(impulse.compute_fair(), std::nullopt)
      << "Empty impulse gives non-none result " << *impulse.compute_fair();
}

class LinearImpulseSymmetryTest
    : public testing::TestWithParam<
          std::tuple<double, double, double, double>> {};

TEST_P(LinearImpulseSymmetryTest, TestWideSymmetry) {
  auto [scale, width, reference, mid] = GetParam();
  LinearBookImpulse impulse(scale);
  impulse.set_reference(reference);
  impulse.add_impulse(Side::Sell, mid + width, 1.0);
  impulse.add_impulse(Side::Buy, mid - width, 1.0);
  EXPECT_NEAR(*impulse.compute_fair(), mid, 2e-4);
}

INSTANTIATE_TEST_SUITE_P(
    LinearImpulse, LinearImpulseSymmetryTest,
    ::testing::Combine(::testing::Values(0.1, 1.0, 2.0),  // scale
                       ::testing::Values(-1.0, 0.0, 1.0), // width
                       ::testing::Values(-1.0, 0.0, 1.0), // reference
                       ::testing::Values(-1.0, 0.0, 1.0)  // mid
                       ));